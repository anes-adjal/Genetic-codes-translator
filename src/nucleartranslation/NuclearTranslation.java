/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package nucleartranslation;

import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author ADJAL Anes
 */
public class NuclearTranslation extends javax.swing.JFrame {

    /**
     * Creates new form NuclearTranslation
     */
    public NuclearTranslation() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        fromAdnC = new javax.swing.JButton();
        fromAdnU = new javax.swing.JButton();
        fromArnm = new javax.swing.JButton();
        ADN = new javax.swing.JLabel();
        AdnU = new javax.swing.JFormattedTextField();
        AdnC = new javax.swing.JFormattedTextField();
        Arnm = new javax.swing.JFormattedTextField();
        actions = new javax.swing.JLabel();
        ARNm = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        fromProtine = new javax.swing.JButton();
        Protine = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        exit = new javax.swing.JButton();
        start = new javax.swing.JButton();
        MainMessage = new javax.swing.JTextField();
        TU = new javax.swing.JTextField();
        StopMessage = new javax.swing.JTextField();
        jTextField1 = new javax.swing.JTextField();
        MOK = new java.awt.Button();
        COk = new java.awt.Button();
        UOk = new java.awt.Button();
        ProOk = new java.awt.Button();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(java.awt.SystemColor.activeCaption);
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "3 AS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe Script", 1, 24), new java.awt.Color(0, 0, 0))); // NOI18N
        jPanel1.setFocusable(false);
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });

        fromAdnC.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        fromAdnC.setText("AdnC");
        fromAdnC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fromAdnCActionPerformed(evt);
            }
        });

        fromAdnU.setFont(new java.awt.Font("Dialog", 0, 17)); // NOI18N
        fromAdnU.setText("AdnU");
        fromAdnU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fromAdnUActionPerformed(evt);
            }
        });

        fromArnm.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        fromArnm.setText("ARNm");
        fromArnm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fromArnmActionPerformed(evt);
            }
        });

        ADN.setFont(new java.awt.Font("Dialog", 0, 23)); // NOI18N
        ADN.setForeground(new java.awt.Color(204, 0, 0));
        ADN.setText("ADN");

        AdnU.setBackground(new java.awt.Color(255, 255, 255));
        AdnU.setForeground(new java.awt.Color(0, 0, 0));
        AdnU.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        AdnU.setFont(new java.awt.Font("Dialog", 0, 17)); // NOI18N
        AdnU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdnUActionPerformed(evt);
            }
        });

        AdnC.setBackground(new java.awt.Color(255, 255, 255));
        AdnC.setForeground(new java.awt.Color(0, 0, 0));
        AdnC.setFont(new java.awt.Font("Dialog", 0, 17)); // NOI18N
        AdnC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdnCActionPerformed(evt);
            }
        });

        Arnm.setBackground(new java.awt.Color(255, 255, 255));
        Arnm.setForeground(new java.awt.Color(0, 0, 0));
        Arnm.setFont(new java.awt.Font("Dialog", 0, 17)); // NOI18N
        Arnm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ArnmActionPerformed(evt);
            }
        });

        actions.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        actions.setForeground(new java.awt.Color(0, 0, 0));
        actions.setText("Translate  from :  ");

        ARNm.setBackground(new java.awt.Color(204, 204, 204));
        ARNm.setFont(new java.awt.Font("Dialog", 0, 28)); // NOI18N
        ARNm.setForeground(new java.awt.Color(204, 0, 0));
        ARNm.setText("ARNm ");

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 0, 0));
        jLabel3.setText("Cloned ");

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 23)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 0, 0));
        jLabel4.setText("ADN");

        fromProtine.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        fromProtine.setText("Protine");
        fromProtine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fromProtineActionPerformed(evt);
            }
        });

        Protine.setBackground(new java.awt.Color(255, 255, 255));
        Protine.setForeground(new java.awt.Color(0, 0, 0));
        Protine.setFont(new java.awt.Font("Dialog", 0, 17)); // NOI18N
        Protine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProtineActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 26)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(204, 0, 0));
        jLabel5.setText("Protine  ");

        exit.setBackground(new java.awt.Color(0, 0, 0));
        exit.setFont(new java.awt.Font("Dialog", 0, 20)); // NOI18N
        exit.setForeground(new java.awt.Color(255, 255, 255));
        exit.setText("Exit");
        exit.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 204, 255)));
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        start.setBackground(new java.awt.Color(0, 0, 0));
        start.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        start.setForeground(new java.awt.Color(255, 255, 255));
        start.setText("Restart/start");
        start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startActionPerformed(evt);
            }
        });

        MainMessage.setEditable(false);
        MainMessage.setBackground(java.awt.SystemColor.activeCaption);
        MainMessage.setFont(new java.awt.Font("Dialog", 0, 13)); // NOI18N
        MainMessage.setForeground(java.awt.Color.red);
        MainMessage.setText("                                                                                                                                                                            ");
        MainMessage.setBorder(null);
        MainMessage.setFocusable(false);

        TU.setEditable(false);
        TU.setBackground(java.awt.SystemColor.activeCaption);
        TU.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        TU.setForeground(java.awt.Color.red);
        TU.setText("                                                                                            ");
        TU.setBorder(null);
        TU.setFocusable(false);

        StopMessage.setEditable(false);
        StopMessage.setBackground(java.awt.SystemColor.activeCaption);
        StopMessage.setFont(new java.awt.Font("Dialog", 0, 13)); // NOI18N
        StopMessage.setForeground(java.awt.Color.red);
        StopMessage.setText("                                                                                                                                                                           ");
        StopMessage.setBorder(null);
        StopMessage.setFocusable(false);

        jTextField1.setEditable(false);
        jTextField1.setBackground(new java.awt.Color(204, 204, 204));
        jTextField1.setFont(new java.awt.Font("Segoe Script", 1, 14)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(0, 0, 0));
        jTextField1.setText("Produced by : Anes Ad");
        jTextField1.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(0, 0, 0)));
        jTextField1.setFocusable(false);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        MOK.setBackground(java.awt.SystemColor.activeCaptionBorder);
        MOK.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        MOK.setLabel("OK");
        MOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MOKActionPerformed(evt);
            }
        });

        COk.setBackground(java.awt.SystemColor.activeCaptionBorder);
        COk.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        COk.setLabel("OK");
        COk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                COkActionPerformed(evt);
            }
        });

        UOk.setBackground(java.awt.SystemColor.activeCaptionBorder);
        UOk.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        UOk.setLabel("OK");
        UOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UOkActionPerformed(evt);
            }
        });

        ProOk.setBackground(java.awt.SystemColor.activeCaptionBorder);
        ProOk.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        ProOk.setLabel("OK");
        ProOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProOkActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel6.setForeground(java.awt.Color.red);
        jLabel6.setText("uncloned");

        jLabel2.setFont(new java.awt.Font("Gabriola", 1, 42)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 204, 0));
        jLabel2.setText("Genetic Codes Translator");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ARNm)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(ADN))
                                .addGap(0, 0, 0)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel6)))
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AdnC, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(AdnU, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Arnm)
                            .addComponent(Protine))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(UOk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(COk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MOK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ProOk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(actions)
                                .addGap(0, 0, 0)
                                .addComponent(fromAdnU, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fromAdnC, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(55, 55, 55)
                                .addComponent(fromArnm)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fromProtine)
                                .addGap(0, 48, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(StopMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addGap(103, 103, 103))
                            .addComponent(MainMessage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(start)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(107, 107, 107)
                                .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(198, 198, 198)
                .addComponent(TU, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 202, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(133, 133, 133))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(actions, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fromAdnU)
                    .addComponent(fromAdnC)
                    .addComponent(fromArnm)
                    .addComponent(fromProtine))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(AdnC, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(AdnU, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(ADN))
                            .addComponent(jLabel6)
                            .addComponent(UOk, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(COk, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Arnm, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ARNm, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(MOK, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Protine, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5))
                    .addComponent(ProOk, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MainMessage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(StopMessage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(start, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ProOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProOkActionPerformed
        // TODO add your handling code here:
        ProOk.setFocusable(false);
        ProtineActionPerformed(evt);
    }//GEN-LAST:event_ProOkActionPerformed

    private void UOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UOkActionPerformed
        // TODO add your handling code here:
        UOk.setFocusable(false);
        AdnUActionPerformed(evt);
    }//GEN-LAST:event_UOkActionPerformed

    private void COkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_COkActionPerformed
        // TODO add your handling code here:
        COk.setFocusable(false);
        AdnCActionPerformed(evt);
    }//GEN-LAST:event_COkActionPerformed

    private void MOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MOKActionPerformed
        // TODO add your handling code here:
        MOK.setFocusable(false);
        ArnmActionPerformed(evt);
    }//GEN-LAST:event_MOKActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startActionPerformed
        // TODO add your handling code here:
        AdnU.setText("");
        AdnC.setText("");
        Arnm.setText("");
        Protine.setText("");
        StopMessage.setText("");
        message();
    }//GEN-LAST:event_startActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exitActionPerformed

    private void ProtineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProtineActionPerformed
        // TODO add your handling code here:
        if (Protine.getText().isEmpty()==false)
        {
            setEmpty("Protine");
        }
        Protine.setText(protineCorrection());
    }//GEN-LAST:event_ProtineActionPerformed

    private void fromProtineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fromProtineActionPerformed
        // TODO add your handling code here:
        if (Protine.getText().isEmpty())
        TU.setText("Enter serie to convert first");
        else
        {
            Protine.setText(protineCorrection());
            Arnm.setText(betweenLanguages(Protine.getText(),true));
            fromArnmActionPerformed(evt);
        }
    }//GEN-LAST:event_fromProtineActionPerformed

    private void ArnmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ArnmActionPerformed
        // TODO add your handling code here:
        if (Arnm.getText().isEmpty()==false)
        {
        setEmpty("Arnm");
        }
        Arnm.setText(geneticCodeCorrection(Arnm.getText(),true));
    }//GEN-LAST:event_ArnmActionPerformed

    private void AdnCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdnCActionPerformed
        if (AdnC.getText().isEmpty()==false)
        {
        setEmpty("AdnC");
        }
        AdnC.setText(geneticCodeCorrection(AdnC.getText(),false));
    }//GEN-LAST:event_AdnCActionPerformed

    private void AdnUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdnUActionPerformed
        // TODO add your handling code here:
        if (AdnU.getText().isEmpty()==false)
        {
        setEmpty("AdnU");
        }
        AdnU.setText(geneticCodeCorrection(AdnU.getText(),false));
    }//GEN-LAST:event_AdnUActionPerformed

    private void fromArnmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fromArnmActionPerformed
        // TODO add your handling code here:
        if (Arnm.getText().isEmpty())
        {
            TU.setText("Enter serie to convert first");
        }
        else
        {
            Arnm.setText(geneticCodeCorrection(Arnm.getText(),true));
            AdnU.setText(Arnm.getText().replaceAll("U","T"));
            AdnC.setText(betweenAdn(AdnU.getText()));
            Protine.setText(betweenLanguages(Arnm.getText(),false));
        }
    }//GEN-LAST:event_fromArnmActionPerformed

    private void fromAdnUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fromAdnUActionPerformed
        if (AdnU.getText().isEmpty())
        {
            TU.setText("Enter serie to convert first");
        }
        else
        {
            AdnU.setText(geneticCodeCorrection(AdnU.getText(),false));
            Arnm.setText(AdnU.getText().replaceAll("T","U"));
            AdnC.setText(betweenAdn(AdnU.getText()));
            Protine.setText(betweenLanguages(Arnm.getText(),false));
        }

    }//GEN-LAST:event_fromAdnUActionPerformed

    private void fromAdnCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fromAdnCActionPerformed
        // TODO add your handling code here:
        if (AdnC.getText().isEmpty())
        {
            TU.setText("Enter serie to convert first");
        }
        else
        {
            AdnC.setText(geneticCodeCorrection(AdnC.getText(),false));
            AdnU.setText(betweenAdn(AdnC.getText()));
            Arnm.setText(AdnU.getText().replaceAll("T","U"));
            Protine.setText(betweenLanguages(Arnm.getText(),false));
        }
    }//GEN-LAST:event_fromAdnCActionPerformed

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        // TODO add your handling code here:
       /* while(true)
        {
        JOptionPane.showMessageDialog(null, exit, "This is not good bye right ?! Please stay LOL!", WIDTH);
                JOptionPane.showMessageDialog(null,"Do you think you can run away from me you are stucked\nthink me that I left an exit door for you\n but you will never be able to take the adn serie with you");
        }*/
    }//GEN-LAST:event_jPanel1MouseClicked
String[][] protinedb = {{"UUU","UUC","UUA","UUG","CUU","CUC","CUA","CUG","AUU","AUC","AUA","AUG","GUU","GUC","GUA","GUG","UCU","UCC","UCA","UCG","CCU","CCC","CCA","CCG","ACU","ACC","ACA","ACG","GCU","GCC","GCA","GCG","UAU","UAC","UAA","UAG","CAU","CAC","CAA","CAG","AAU","AAC","AAA","AAG","GAU","GAC","GAA","GAG","UGU","UGC","UGA","UGG","CGU","CGC","CGA","CGG","AGU","AGC","AGA","AGG","GGU","GGC","GGA","GGG"},
              {"Phe", "Phe",  "Leu", "Leu",  "Leu", "Leu", "Leu",  "Leu",  "Ile"  ,"Ile"   ,"Ile"    ,"Met" ,"Val","Val","Val","Val","Ser"  ,"Ser","Ser","Ser","Pro","Pro","Pro","Pro","Thr","Thr","Thr","Thr","Ala","Ala","Ala","Ala","Tyr","Tyr","Stp","Stp","His","His","Gln","Gln","Asn","Asn","Lys","Lys","Asp","Asp","Glu","Glu","Cys","Cys","Stp","Trp","Arg","Arg","Arg","Arg","Ser","Ser","Arg","Arg","Gly","Gly","Gly","Gly"}};                                                                                                                                                                                                                                                                                                                                                      
    
    
    private void setEmpty(String e)
   {
       if (e.equalsIgnoreCase("AdnU"))
       {
            AdnC.setText("");
                     Arnm.setText("");
                            Protine.setText("");
       }
       else if (e.equalsIgnoreCase("AdnC"))
       {
           AdnU.setText("");
                     Arnm.setText("");
                            Protine.setText("");
       }
       else  if (e.equalsIgnoreCase("Arnm"))
       {
           AdnU.setText("");
              AdnC.setText("");
                            Protine.setText("");
       }
        else  if (e.equalsIgnoreCase("Protine"))
        {
            AdnU.setText("");
              AdnC.setText("");
                     Arnm.setText("");
        }
   }
  
 
    private  void Case() {
    AdnU.setText(AdnU.getText().toUpperCase());
    AdnC.setText(AdnC.getText().toUpperCase());
    Arnm.setText(Arnm.getText().toUpperCase());
    Protine.setText(Protine.getText().toUpperCase());
}
    
    
    
   private String tiret(String nucleotide)
   {
       String str = "" ;
       Pattern   p = Pattern.compile("\\w{3}|\\w{2}|\\w");
      Matcher  m = p.matcher(nucleotide);
      int count = 0 ;
     while(m.find())
        {
            // hada yahsab lhrof ta3 string li derna fiha tiryat 
            count+=3;
                       //gal ida 3ad lharf thlath li lgitou mahoch how lakhar zid tiret
                       if (m.end()!=nucleotide.length())
                        str = str + m.group(0) + "-" ;
                       // kon how lakhar matzidach tiret 
                        else
                           str = str + m.group(0)  ;
                                                              }
       return str ;
   }
   
   
   
   
   /* common ta3tilha arnm wla adn tnahilhom lahrof li mahomch 
     w n3gbolha true kon ykon arnm bah tbadal l T b U  w false l3aks    */
   private String geneticCodeCorrection(String nucleotide , boolean arnm)
   {
       message();
      nucleotide = nucleotide.toUpperCase();
      nucleotide = nucleotide.replaceAll("-","");
       //str yhaz tasalsol li t3agbolo yastikih
     Pattern p = Pattern.compile("[^ A C G T U -]");
     Matcher m = p.matcher(nucleotide);
     if(m.find()) {
         nucleotide = m.replaceAll("");
         MainMessage.setText("Enter commun nucleotides 'A | T | U | G | C'(Notice : Unkown nucleotides had been deleted)");
     }
     nucleotide = nucleotide.replaceAll(" ","");
     if (arnm)
     {
         if (nucleotide.contains("T"))
         {
        nucleotide = nucleotide.replaceAll("T", "U");
        TU.setText("Nucleotides 'T' had been replaced by 'U'");
         }
     }
     else 
     {
         if (nucleotide.contains("U"))
         {
        nucleotide = nucleotide.replaceAll("U", "T");
         TU.setText("Nucleotides 'U' had been replaced by 'T'");
        
         }
     }
     nucleotide = tiret(nucleotide);
     
     return nucleotide ;
   }
   
   
   
   private String protineCorrection()
   {
      StopMessage.setText("");
      String protine = "";
       message();
       Pattern p = Pattern.compile("\\w{3}|\\w{2}|\\w");
       Matcher m = p.matcher(Protine.getText());
       boolean found ;
       while(m.find())
       {
           found = false ;
           for (String pro : protinedb[1])
           {
               if (m.group(0).equalsIgnoreCase(pro))
               {
                   protine = protine + pro ;
                   found = true ;
                   break ;
               }
           }
           if (found == false )
           {
                 MainMessage.setText("Attention : Enter known amino acides. Notice : Unkown amino-acids had been deleted");
           }

       }
       if (protine.contains("Stp"))
       {
           StopMessage.setText("Serie contains a stop nucleotide! , All amino acids after stop nucleotide will be deleted after translation");
       }
       protine = tiret(protine);
       return protine;
   }
   
   
   private void message()
   {
       MainMessage.setText("");
//              AdnUMessage.setText("");
            //  ArnmMessage.setText("");
//              ProtineMessage.setText("");
              TU.setText("");
              //frAdnCMes.setText("");
             // frArnmMes.setText("");
            //  frProtineMes.setText("");
              
   }
   
   
   
   
   private String betweenAdn(String nucleotide)
   {
     String trans = "";
     for (int i = 0 ; i<nucleotide.length();i++)
     {
         switch(nucleotide.charAt(i))
                 {
                      case 'A' :
                          trans = trans + 'T';
                          break ;
                      case 'T':
                          trans = trans + 'A';
                          break; 
                      case 'C':
                          trans = trans +'G';
                          break; 
                      case 'G':
                          trans = trans + 'C';
                          break ;
                      case '-':
                          trans = trans + '-';
                          break ;
                 }
     }
     return trans ;
   }
   
   
   
  
   private String betweenLanguages(String serie , boolean pro)
   {
       
       Pattern p = Pattern.compile("\\w{3}");
       Matcher m = p.matcher(serie);
      String trans = "";
       while(m.find())
       {
           for (int i = 0 ; i<protinedb[0].length;i++)
           {
               if (pro)
               {
                   if (m.group(0).equals(protinedb[1][i]))
                   {
                       trans = trans + protinedb[0][i] ;
                       break;
                   }
               }
               else 
               {
                    if (m.group(0).equals(protinedb[0][i]))
                   {
                       trans = trans + protinedb[1][i] ;
                       break; 
                   }
               }
           }
       }
       if (pro)
       {
         if (serie.contains("Stp"))
         {
                        Protine.setText(serie.substring(0, serie.indexOf("Stp")));
           MainMessage.setText("Serie contains a stop nucleotide!,All acids amino after stop nucleotide had been deleted");
           StopMessage.setText("");
         }
       }
       else if (trans.contains("Stp"))
       {
           trans = trans.substring(0, trans.indexOf("Stp"));
           MainMessage.setText("Serie contains a stop nucleotide!,All acids amino after stop nucleotide had been deleted");
                      StopMessage.setText("");
       }
       serie = tiret(trans);
       return serie;
   }
 /*  private boolean checCorrection(String nucleotide)
   {
       nucleotide =nucleotide.toUpperCase();
       // false ma3naha msahha 
        Pattern p ;
        Matcher m ;
        boolean corrected ;
       if (nucleotide.contains("-"))
       {
           p = Pattern.compile("[-]\\w{4}|[-].[^ A C G U T]");
          m = p.matcher(nucleotide);
          corrected = m.find(); 
       }
       else 
           corrected = true;
       return corrected ;
   }*/
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NuclearTranslation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            NuclearTranslation nclt = new NuclearTranslation();
            nclt.setLocationRelativeTo(null);
            nclt.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ADN;
    private javax.swing.JLabel ARNm;
    private javax.swing.JFormattedTextField AdnC;
    private javax.swing.JFormattedTextField AdnU;
    private javax.swing.JFormattedTextField Arnm;
    private java.awt.Button COk;
    private java.awt.Button MOK;
    private javax.swing.JTextField MainMessage;
    private java.awt.Button ProOk;
    private javax.swing.JFormattedTextField Protine;
    private javax.swing.JTextField StopMessage;
    private javax.swing.JTextField TU;
    private java.awt.Button UOk;
    private javax.swing.JLabel actions;
    private javax.swing.JButton exit;
    private javax.swing.JButton fromAdnC;
    private javax.swing.JButton fromAdnU;
    private javax.swing.JButton fromArnm;
    private javax.swing.JButton fromProtine;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton start;
    // End of variables declaration//GEN-END:variables
}
